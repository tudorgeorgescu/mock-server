// Generated by CoffeeScript 1.12.2
'use strict';
var each, keyReplacer, parseKeyPath;

each = require('underscore').each;

parseKeyPath = function(path) {
  var keySegment, keySegments, parseKeySegment, result, upToIndex;
  upToIndex = function(string, character) {
    var index;
    index = string.indexOf(character);
    if (index === -1) {
      return string.length;
    } else {
      return index;
    }
  };
  parseKeySegment = function(path) {
    var bracket, dot, endOffset, restOffset;
    if (path[0] === '[') {
      endOffset = restOffset = path.indexOf(']', 1);
      if (path[restOffset + 1] === '.') {
        restOffset += 1;
      }
      return [path.substring(restOffset + 1), path.substring(1, endOffset)];
    } else if (path.length > 0) {
      dot = upToIndex(path, '.');
      bracket = upToIndex(path, '[');
      if (dot < bracket) {
        return [path.substring(dot + 1), path.substring(0, dot)];
      } else {
        return [path.substring(bracket), path.substring(0, bracket)];
      }
    } else {
      return null;
    }
  };
  keySegments = [];
  while (result = parseKeySegment(path)) {
    path = result[0], keySegment = result[1];
    keySegments.push(keySegment);
  }
  return keySegments;
};

keyReplacer = function(options) {
  return function(content) {
    var keyPath, p;
    keyPath = parseKeyPath(options.replaceKey);
    p = content;
    while (keyPath.length > 1) {
      p = p[keyPath.shift()];
    }
    p[keyPath[0]] = options.replaceValue;
    return content;
  };
};

module.exports = {
  keyReplacer: keyReplacer
};
